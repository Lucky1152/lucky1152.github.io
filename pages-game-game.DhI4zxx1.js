import{a as e,s as t,b as s,y as a,z as i,g as o,A as l,B as r,C as c,r as h,d as n,w as d,S as m,o as g,e as u,i as p,j as f,t as b,k as w,v as y,f as S,h as k,F as v,D as M,m as T,l as C,p as _,x as P}from"./index-LxKnEaWO.js";import{_ as x}from"./_plugin-vue_export-helper.BCo6x5W8.js";const E=x({data:()=>({gameOver:!1,score:0,combo:0,board:[],boardSize:8,selectedCell:null,hintCells:[],hintTimer:null,emojis:["🍎","🍊","🍋","🍇","🍓","🥝","🍑"],animating:!1,scoreAnimation:!1,level:1,targetScore:1e3,moves:30,maxMoves:30,gameMode:"classic",timeLeft:60,timerInterval:null,targetFruits:{},collectedFruits:{},powerUps:{bomb:2,rainbow:1,lightning:2},particles:[],particleTimer:null,dailyProgress:{score:0,matches:0,powerUpsUsed:0},specialEffects:{showLevelUp:!1,showPerfect:!1,showComboMax:!1,showChainReaction:!1,chainCount:0},soundEnabled:!0,musicEnabled:!0,currentTheme:"animal",selectedPowerUp:null,showGameSettings:!1,showContinueDialog:!1,continueDialogData:null,specialBlockChance:.05,timeBonusCount:0,gameTime:0,gameStartTime:0,gameTimeInterval:null,customToast:{show:!1,visible:!1,hiding:!1,message:""},chaosMode:{currentChallenge:null,challengeProgress:0,challengeTarget:0,nextChallengeIn:0,multiplier:1,effects:[],completedChallenges:0},taskSystem:{isExpanded:!1,currentTask:null,taskProgress:0,taskTarget:0,showRewardAnimation:!1,position:{y:200},isDragging:!1,dragStart:{x:0,y:0}}}),onLoad(){this.loadGameSettings(),this.loadSettings(),this.initTaskSystem();const e=this.loadGameProgress();e?this.showContinueGameDialog(e):this.startNewGame()},onShow(){e.resumeBackgroundMusic()},onUnload(){this.clearTimers(),this.clearParticleLoop()},methods:{startNewGame(){this.initBoard(),this.startParticleLoop(),this.gameTime=0,this.startGameTimer(),"timed"===this.gameMode&&this.startTimer()},saveGameProgress(){if(this.gameOver)return;const e={gameMode:this.gameMode,score:this.score,level:this.level,moves:this.moves,maxMoves:this.maxMoves,timeLeft:this.timeLeft,timeBonusCount:this.timeBonusCount,combo:this.combo,gameTime:this.gameTime,gameStartTime:this.gameStartTime,board:JSON.parse(JSON.stringify(this.board)),powerUps:{...this.powerUps},specialBlockChance:this.specialBlockChance,chaosMode:JSON.parse(JSON.stringify(this.chaosMode)),taskSystem:JSON.parse(JSON.stringify(this.taskSystem)),timestamp:Date.now()},s=`gameProgress_${this.gameMode}`;t(s,e)},loadGameProgress(){const e=`gameProgress_${this.gameMode}`,t=s(e);if(t&&t.timestamp){return(Date.now()-t.timestamp)/36e5>24?(a(e),null):t}return null},showContinueGameDialog(e){this.continueDialogData={gameMode:e.gameMode,modeName:{classic:"经典模式",chaos:"混沌模式",timed:"限时模式"}[e.gameMode],score:e.score,level:e.level,gameTime:e.gameTime||0,savedProgress:e,multiplier:e.chaosMode.completedChallenges+1},this.showContinueDialog=!0},restoreGameProgress(e){this.score=e.score,this.level=e.level,this.moves=e.moves,this.maxMoves=e.maxMoves,this.timeLeft=e.timeLeft,this.timeBonusCount=e.timeBonusCount,this.combo=e.combo,this.gameTime=e.gameTime||0,this.gameStartTime=e.gameStartTime||Date.now(),this.board=e.board,this.powerUps=e.powerUps,this.specialBlockChance=e.specialBlockChance,this.chaosMode=e.chaosMode,this.board&&Array.isArray(this.board)&&this.board.forEach((e=>{e&&Array.isArray(e)&&e.forEach((e=>{if(e&&!e.isSpecial&&e.imageSrc)try{const t=e.imageSrc.split("/"),s=t[t.length-1],a=`/static/themes/${this.currentTheme}/${s}`;e.imageSrc=a}catch(t){console.error("更新棋盘图片时出错:",t,"错误的单元格数据:",e)}}))})),e.taskSystem?(this.taskSystem=e.taskSystem,this.taskSystem.showRewardAnimation=!1,this.taskSystem.position||(this.taskSystem.position={y:150}),this.taskSystem.dragStart||(this.taskSystem.dragStart={x:0,y:0})):this.initTaskSystem(),this.startParticleLoop(),this.startGameTimer(),"timed"===this.gameMode&&this.timeLeft>0&&this.startTimer(),this.showCustomToast("游戏进度已恢复",2e3)},clearGameProgress(){const e=`gameProgress_${this.gameMode}`;a(e)},initTaskSystem(){this.taskSystem.position||(this.taskSystem.position={y:150}),this.taskSystem.dragStart||(this.taskSystem.dragStart={x:0,y:0}),this.generateNewTask()},generateNewTask(){const e=[{id:"score",name:"得分达人",description:"本局游戏中获得指定分数",type:"score",target:1e3+Math.floor(1e3*Math.random()),reward:"随机道具",rewardItem:null},{id:"combo",name:"连击大师",description:"本局游戏中达成指定次数连击",type:"combo",target:4+Math.floor(5*Math.random()),reward:"随机道具",rewardItem:null},{id:"special",name:"特殊方块专家",description:"本局游戏中激活指定数量特殊方块",type:"special",target:4+Math.floor(4*Math.random()),reward:"随机道具",rewardItem:null},{id:"clear",name:"消除能手",description:"本局游戏中消除指定数量方块",type:"clear",target:60+Math.floor(50*Math.random()),reward:"随机道具",rewardItem:null}],t=e[Math.floor(Math.random()*e.length)];this.taskSystem.currentTask=t,this.taskSystem.taskProgress=0,this.taskSystem.taskTarget=t.target},saveTaskProgress(){},toggleTaskWindow(){this.taskSystem.isDragging||(this.playSound("click"),this.taskSystem.isExpanded=!this.taskSystem.isExpanded)},closeTaskWindow(){this.taskSystem.isExpanded=!1},formatTime:e=>`${Math.floor(e/60)}:${(e%60).toString().padStart(2,"0")}`,continueSavedGame(){this.playSound("click"),this.continueDialogData&&this.continueDialogData.savedProgress&&(this.restoreGameProgress(this.continueDialogData.savedProgress),this.closeContinueDialog())},startNewGameFromDialog(){this.clearGameProgress(),this.startNewGame(),this.closeContinueDialog()},closeContinueDialog(){this.showContinueDialog=!1,this.continueDialogData=null},updateTaskProgress(e,t=1){this.taskSystem.currentTask&&this.taskSystem.currentTask.type===e&&(this.taskSystem.taskProgress+=t,this.taskSystem.taskProgress>=this.taskSystem.taskTarget?this.completeTask():this.saveTaskProgress())},completeTask(){if(!this.taskSystem.currentTask)return;const e=["bomb","rainbow","lightning"],t=e[Math.floor(Math.random()*e.length)];this.powerUps[t]++,this.taskSystem.currentTask.rewardItem=this.getPowerUpName(t),this.showTaskRewardAnimation(),this.playSound("powerup"),this.vibrate(200),setTimeout((()=>{this.generateNewTask(),this.taskSystem.showRewardAnimation=!1}),1e3)},showTaskRewardAnimation(){this.taskSystem.showRewardAnimation=!0},getPowerUpName:e=>({bomb:"💣 炸弹",rainbow:"🌈 彩虹球",lightning:"⚡ 闪电"}[e]||"未知道具"),getArcProgress(){if(!this.taskSystem.currentTask)return 0;const e=this.taskSystem.taskProgress/this.taskSystem.taskTarget;return Math.min(100*e,100)},onTouchStart(e){this.taskSystem.dragStart||(this.taskSystem.dragStart={x:0,y:0}),this.taskSystem.isDragging=!0,this.taskSystem.dragStart={x:e.touches[0].clientX,y:e.touches[0].clientY},e.stopPropagation()},onTouchMove(e){if(!this.taskSystem.isDragging||!this.taskSystem.position||!this.taskSystem.dragStart)return;const t=e.touches[0].clientY-this.taskSystem.dragStart.y,s=i().windowHeight;this.taskSystem.position.y=Math.max(0,Math.min(s-100,this.taskSystem.position.y+t)),this.taskSystem.dragStart={x:e.touches[0].clientX,y:e.touches[0].clientY},e.preventDefault(),e.stopPropagation()},onTouchEnd(e){this.taskSystem.isDragging&&(this.taskSystem.isDragging=!1,setTimeout((()=>{this.taskSystem.isDragging=!1}),100),e.stopPropagation())},loadGameSettings(){const e=o().globalData||{};this.gameMode=e.gameMode||"classic",this.soundEnabled=!1!==e.soundEnabled,this.musicEnabled=!1!==e.musicEnabled,this.currentTheme=e.currentTheme||"animal",this.selectMode(this.gameMode),this.updateThemeEmojis()},updateScore(e,t=0){const s=this.score;if("chaos"===this.gameMode&&(e*=this.chaosMode.multiplier,this.chaosMode.currentChallenge)){const s=this.chaosMode.currentChallenge;"score"===s.type?this.chaosMode.challengeProgress+=e:"clear"===s.type&&t>0&&(this.chaosMode.challengeProgress+=t)}if(this.score+=e,"timed"===this.gameMode){const e=Math.floor(s/500),t=Math.floor(this.score/500);if(t>e){const s=5*(t-e);this.timeLeft+=s,this.timeBonusCount=t,this.playSound("levelcomplete"),this.showCustomToast(`+${s}秒`,1e3)}}this.uploadGameData()},showCustomToast(e,t=1e3){this.customToast.message=e,this.customToast.show=!0,this.customToast.visible=!1,this.customToast.hiding=!1,this.$nextTick((()=>{this.customToast.visible=!0})),setTimeout((()=>{this.customToast.visible=!1,this.customToast.hiding=!0,setTimeout((()=>{this.customToast.show=!1,this.customToast.hiding=!1}),300)}),t-300)},selectMode(e){switch(this.gameMode=e,e){case"classic":this.targetScore=0,this.maxMoves=30,this.timeLeft=0,this.specialBlockChance=.05;break;case"chaos":this.targetScore=0,this.maxMoves=40,this.timeLeft=0,this.specialBlockChance=.05,this.initChaosMode();break;case"timed":this.targetScore=0,this.maxMoves=999,this.timeLeft=90,this.specialBlockChance=.05}this.moves=this.maxMoves},initChaosMode(){this.chaosMode.currentChallenge=null,this.chaosMode.challengeProgress=0,this.chaosMode.challengeTarget=0,this.chaosMode.nextChallengeIn=3,this.chaosMode.multiplier=1,this.chaosMode.effects=[],this.chaosMode.completedChallenges=0},processChaosMode(){if("chaos"===this.gameMode)return this.chaosMode.nextChallengeIn>0?(this.chaosMode.nextChallengeIn--,void(0===this.chaosMode.nextChallengeIn&&this.startRandomChallenge())):void(this.chaosMode.currentChallenge&&this.checkChallengeProgress())},startRandomChallenge(){const e=[{type:"combo",name:"🔥 连击挑战",description:"完成3次连击",target:3,reward:"分数x2倍率"},{type:"special",name:"⚡ 特殊方块",description:"激活5个特殊方块",target:5,reward:"+10步奖励"},{type:"score",name:"💎 快速得分",description:"得到500分",target:500,reward:"特殊方块雨"},{type:"clear",name:"🌪️ 清场挑战",description:"消除80个方块",target:80,reward:"重排棋盘"}],t=e[Math.floor(Math.random()*e.length)];this.chaosMode.currentChallenge=t,this.chaosMode.challengeProgress=0,this.chaosMode.challengeTarget=t.target,this.showCustomToast(`${t.name}: ${t.description}`,3e3)},checkChallengeProgress(){this.chaosMode.currentChallenge&&(this.chaosMode.challengeProgress>this.chaosMode.challengeTarget&&(this.chaosMode.challengeProgress=this.chaosMode.challengeTarget),this.chaosMode.challengeProgress>=this.chaosMode.challengeTarget&&this.completeChallenge())},completeChallenge(){const e=this.chaosMode.currentChallenge;e&&(this.chaosMode.completedChallenges++,this.giveChaosReward(e),this.showCustomToast(`🎉 挑战${this.chaosMode.completedChallenges}完成！获得：${e.reward}`,2e3),this.chaosMode.currentChallenge=null,this.chaosMode.nextChallengeIn=Math.floor(5*Math.random())+3)},giveChaosReward(e){switch(e.type){case"combo":this.chaosMode.multiplier=2,this.chaosMode.effects.push({type:"multiplier",value:2,duration:10});break;case"special":this.moves+=10,this.maxMoves+=10;break;case"score":this.createSpecialBlockRain();break;case"clear":this.shuffleBoard()}},createSpecialBlockRain(){const e=[];for(let t=0;t<this.boardSize;t++)for(let s=0;s<this.boardSize;s++)e.push({row:t,col:s});for(let t=0;t<5&&e.length>0;t++){const t=Math.floor(Math.random()*e.length),s=e.splice(t,1)[0],a=["bomb","horizontal","vertical"],i=a[Math.floor(Math.random()*a.length)];this.board[s.row][s.col]=this.createSpecialBlock(i)}},updateChaosEffects(){"chaos"===this.gameMode&&(this.chaosMode.effects=this.chaosMode.effects.filter((e=>(e.duration--,!(e.duration<=0)||("multiplier"===e.type&&(this.chaosMode.multiplier=1),!1)))))},getChaosChallenge(){let e=this.chaosMode.completedChallenges;return this.chaosMode.currentChallenge&&(e+=1),e||1},updateThemeEmojis(){const e={fruit:["/static/themes/fruit/1.png","/static/themes/fruit/2.png","/static/themes/fruit/3.png","/static/themes/fruit/4.png","/static/themes/fruit/5.png","/static/themes/fruit/6.png","/static/themes/fruit/7.png"],candy:["/static/themes/candy/1.png","/static/themes/candy/2.png","/static/themes/candy/3.png","/static/themes/candy/4.png","/static/themes/candy/5.png","/static/themes/candy/6.png","/static/themes/candy/7.png"],gem:["/static/themes/gem/1.png","/static/themes/gem/2.png","/static/themes/gem/3.png","/static/themes/gem/4.png","/static/themes/gem/5.png","/static/themes/gem/6.png","/static/themes/gem/7.png"],ocean:["/static/themes/ocean/1.png","/static/themes/ocean/2.png","/static/themes/ocean/3.png","/static/themes/ocean/4.png","/static/themes/ocean/5.png","/static/themes/ocean/6.png","/static/themes/ocean/7.png"],animal:["/static/themes/animal/1.png","/static/themes/animal/2.png","/static/themes/animal/3.png","/static/themes/animal/4.png","/static/themes/animal/5.png","/static/themes/animal/6.png","/static/themes/animal/7.png"]};this.emojis=e[this.currentTheme]||e.fruit},resetGame(){switch(this.playSound("click"),this.clearGameProgress(),this.gameOver=!1,this.score=0,this.combo=0,this.selectedCell=null,this.hintCells=[],this.animating=!1,this.scoreAnimation=!1,this.particles=[],this.selectedPowerUp=null,this.timeBonusCount=0,this.gameTime=0,this.customToast={show:!1,visible:!1,hiding:!1,message:""},this.powerUps={bomb:2,rainbow:1,lightning:2},Object.keys(this.specialEffects).forEach((e=>{this.specialEffects[e]=!1})),this.gameMode){case"classic":this.level=1,this.targetScore=0,this.maxMoves=50,this.moves=this.maxMoves,this.timeLeft=0,this.specialBlockChance=.05;break;case"chaos":this.level=1,this.targetScore=0,this.maxMoves=40,this.moves=this.maxMoves,this.timeLeft=0,this.specialBlockChance=.05,this.initChaosMode();break;case"timed":this.level=1,this.targetScore=0,this.maxMoves=999,this.moves=this.maxMoves,this.timeLeft=90,this.specialBlockChance=.05,this.timeBonusCount=0}this.clearTimers(),this.startGameTimer(),this.clearParticleLoop(),this.initBoard(),this.initTaskSystem(),this.startParticleLoop(),"timed"===this.gameMode&&this.startTimer()},initBoard(){this.board=[];for(let e=0;e<this.boardSize;e++){const e=[];for(let t=0;t<this.boardSize;t++)e.push(this.createRandomCell());this.board.push(e)}this.removeInitialMatches(),this.startHintTimer()},createRandomCell(){const e=Math.random(),t=this.specialBlockChance;return e<.4*t?this.createSpecialBlock("bomb"):e<.7*t?this.createSpecialBlock("horizontal"):e<t?this.createSpecialBlock("vertical"):{imageSrc:this.emojis[Math.floor(Math.random()*this.emojis.length)],removing:!1,falling:!1,transform:"none",id:Date.now()+Math.random(),type:"normal",isSpecial:!1}},createSpecialBlock(e){const t={removing:!1,falling:!1,transform:"none",id:Date.now()+Math.random(),type:"normal",isSpecial:!0,specialType:e};switch(e){case"bomb":t.imageSrc="/static/themes/special/bomb.png";break;case"horizontal":t.imageSrc="/static/themes/special/horizontal.png";break;case"vertical":t.imageSrc="/static/themes/special/vertical.png";break;default:t.imageSrc=this.emojis[Math.floor(Math.random()*this.emojis.length)],t.isSpecial=!1}return t},createSpecialCell(e,t=null){const s=this.createRandomCell();switch(s.type=e,e){case"bomb":s.imageSrc="/static/themes/special/bomb.png";break;case"rainbow":s.imageSrc="/static/themes/special/rainbow.png";break;case"lightning":baseCell.imageSrc="/static/themes/special/lightning.png"}return baseCell},removeInitialMatches(){let e=!0;for(;e;){e=!1;for(let t=0;t<this.boardSize;t++)for(let s=0;s<this.boardSize;s++)this.hasMatchAt(t,s)&&(this.board[t][s]=this.createRandomCell(),e=!0)}},hasMatchAt(e,t){const s=this.board[e][t];if(!s)return!1;if(s.isSpecial)return!1;const a=s.imageSrc;let i=1;for(let l=t-1;l>=0&&this.board[e][l]&&!this.board[e][l].isSpecial&&this.board[e][l].imageSrc===a;l--)i++;for(let l=t+1;l<this.boardSize&&this.board[e][l]&&!this.board[e][l].isSpecial&&this.board[e][l].imageSrc===a;l++)i++;let o=1;for(let l=e-1;l>=0&&this.board[l][t]&&!this.board[l][t].isSpecial&&this.board[l][t].imageSrc===a;l--)o++;for(let l=e+1;l<this.boardSize&&this.board[l][t]&&!this.board[l][t].isSpecial&&this.board[l][t].imageSrc===a;l++)o++;return i>=3||o>=3},selectCell(e,t){if(e<0||e>=this.boardSize||t<0||t>=this.boardSize)return;if(this.animating||this.gameOver)return;if(!this.board[e]||!this.board[e][t])return;if(this.clearHintTimer(),this.selectedPowerUp)return void this.usePowerUpAt(e,t);const s=this.board[e][t];if(this.selectedCell)if(this.selectedCell.row===e&&this.selectedCell.col===t)this.selectedCell=null,this.startHintTimer();else if(this.isAdjacent(this.selectedCell,{row:e,col:t}))this.swapCells(this.selectedCell,{row:e,col:t});else{if(s.isSpecial)return this.selectedCell=null,void this.triggerSpecialBlock(e,t);this.selectedCell={row:e,col:t}}else{if(s.isSpecial)return void this.triggerSpecialBlock(e,t);this.selectedCell={row:e,col:t}}},async triggerSpecialBlock(e,t){const s=this.board[e][t];if(s&&s.isSpecial){if(this.animating=!0,this.selectedCell=null,this.playSound("special"),this.vibrate(150),"chaos"===this.gameMode&&this.chaosMode.currentChallenge){"special"===this.chaosMode.currentChallenge.type&&this.chaosMode.challengeProgress++}switch(this.updateTaskProgress("special",1),s.specialType){case"bomb":await this.triggerBombEffect(e,t);break;case"horizontal":await this.triggerHorizontalEffect(e,t);break;case"vertical":await this.triggerVerticalEffect(e,t)}"timed"!==this.gameMode&&this.moves--,await this.processMatches()}},async triggerBombEffect(e,t){const s=[],a=[];for(let o=-1;o<=1;o++)for(let i=-1;i<=1;i++){const l=e+o,r=t+i;if(l>=0&&l<this.boardSize&&r>=0&&r<this.boardSize&&this.board[l][r]){const i=this.board[l][r];!i.isSpecial||l===e&&r===t||a.push({row:l,col:r,type:i.specialType}),s.push({row:l,col:r}),this.createMatchParticles(l,r)}}s.forEach((e=>{this.board[e.row][e.col].removing=!0}));const i=20*s.length;this.updateScore(i,s.length),this.updateDailyProgress("score",i),this.updateTaskProgress("clear",s.length),this.updateTaskProgress("score",i),await this.animateRemoval(),s.forEach((e=>{this.board[e.row][e.col]=null})),await this.dropAndFill(),await this.triggerChainSpecialEffects(a)},async triggerHorizontalEffect(e,t){const s=[],a=[];for(let o=0;o<this.boardSize;o++)if(this.board[e][o]){const i=this.board[e][o];i.isSpecial&&o!==t&&a.push({row:e,col:o,type:i.specialType}),s.push({row:e,col:o}),this.createMatchParticles(e,o)}s.forEach((e=>{this.board[e.row][e.col].removing=!0}));const i=15*s.length;this.updateScore(i,s.length),this.updateDailyProgress("score",i),this.updateTaskProgress("clear",s.length),this.updateTaskProgress("score",i),await this.animateRemoval(),s.forEach((e=>{this.board[e.row][e.col]=null})),await this.dropAndFill(),await this.triggerChainSpecialEffects(a)},async triggerVerticalEffect(e,t){const s=[],a=[];for(let o=0;o<this.boardSize;o++)if(this.board[o][t]){const i=this.board[o][t];i.isSpecial&&o!==e&&a.push({row:o,col:t,type:i.specialType}),s.push({row:o,col:t}),this.createMatchParticles(o,t)}s.forEach((e=>{this.board[e.row][e.col].removing=!0}));const i=15*s.length;this.updateScore(i,s.length),this.updateDailyProgress("score",i),this.updateTaskProgress("clear",s.length),this.updateTaskProgress("score",i),await this.animateRemoval(),s.forEach((e=>{this.board[e.row][e.col]=null})),await this.dropAndFill(),await this.triggerChainSpecialEffects(a)},async triggerChainSpecialEffects(e,t=!1){if(0===e.length)return;const s=e.length;this.specialEffects.showChainReaction=!0,this.specialEffects.chainCount=s,this.playSound("combo"),this.vibrate(200);const a=s*(t?75:50);this.updateScore(a),this.updateDailyProgress("score",a),this.createChainParticles(s);for(const i of e)await this.triggerSpecialEffectByType(i.row,i.col,i.type),await new Promise((e=>setTimeout(e,150)));this.specialEffects.showChainReaction=!1,this.specialEffects.chainCount=0},async triggerSpecialEffectByType(e,t,s){if(this.playSound("special"),this.vibrate(100),"chaos"===this.gameMode&&this.chaosMode.currentChallenge){"special"===this.chaosMode.currentChallenge.type&&this.chaosMode.challengeProgress++}switch(this.updateTaskProgress("special",1),s){case"bomb":await this.triggerBombEffect(e,t);break;case"horizontal":await this.triggerHorizontalEffect(e,t);break;case"vertical":await this.triggerVerticalEffect(e,t)}},isAdjacent(e,t){const s=Math.abs(e.row-t.row),a=Math.abs(e.col-t.col);return 1===s&&0===a||0===s&&1===a},deepCopyCell:e=>({imageSrc:e.imageSrc,removing:e.removing,falling:e.falling,transform:e.transform,id:e.id,type:e.type,isSpecial:e.isSpecial||!1,specialType:e.specialType||null}),checkSwapMatch(e,t){const s=this.board[e.row][e.col],a=this.board[t.row][t.col],i=this.board.map((e=>e.map((e=>({...e})))));return i[e.row][e.col]={...a},i[t.row][t.col]={...s},this.hasMatchAtVirtual(i,e.row,e.col)||this.hasMatchAtVirtual(i,t.row,t.col)},hasMatchAtVirtual(e,t,s){const a=e[t][s];if(!a||a.isSpecial)return!1;const i=a.imageSrc;let o=1;for(let r=s-1;r>=0&&e[t][r]&&!e[t][r].isSpecial&&e[t][r].imageSrc===i;r--)o++;for(let r=s+1;r<this.boardSize&&e[t][r]&&!e[t][r].isSpecial&&e[t][r].imageSrc===i;r++)o++;let l=1;for(let r=t-1;r>=0&&e[r][s]&&!e[r][s].isSpecial&&e[r][s].imageSrc===i;r--)l++;for(let r=t+1;r<this.boardSize&&e[r][s]&&!e[r][s].isSpecial&&e[r][s].imageSrc===i;r++)l++;return o>=3||l>=3},async swapCells(e,t){this.animating=!0;const s=this.checkSwapMatch(e,t);if(this.playSound("swap"),this.vibrate(),s){await this.animateSwap(e,t);const s=this.deepCopyCell(this.board[e.row][e.col]),a=this.deepCopyCell(this.board[t.row][t.col]);this.board[e.row][e.col]=a,this.board[t.row][t.col]=s,this.selectedCell=null,this.combo=1,"timed"!==this.gameMode&&this.moves--,this.updateDailyProgress("matches",1),await this.processMatches()}else await this.animateSwapBack(e,t),this.selectedCell=null;this.animating=!1,this.startHintTimer()},async animateSwap(e,t){const s=88*(t.col-e.col),a=88*(t.row-e.row),i=-s,o=-a;return this.board[e.row][e.col].transform=`translate(${s}rpx, ${a}rpx)`,this.board[t.row][t.col].transform=`translate(${i}rpx, ${o}rpx)`,new Promise((s=>{setTimeout((()=>{this.board[e.row][e.col].transform="none",this.board[t.row][t.col].transform="none",s()}),300)}))},async animateSwapBack(e,t){const s=30*(t.col-e.col),a=30*(t.row-e.row),i=-s,o=-a;return this.board[e.row][e.col].transform=`translate(${s}rpx, ${a}rpx)`,this.board[t.row][t.col].transform=`translate(${i}rpx, ${o}rpx)`,this.vibrate(40),new Promise((s=>{setTimeout((()=>{this.board[e.row][e.col].transform="none",this.board[t.row][t.col].transform="none",setTimeout((()=>{s()}),200)}),150)}))},getPowerUpIcon:e=>({bomb:"💣",rainbow:"🌈",lightning:"⚡"}[e]||"?"),usePowerUp(e){if(!(this.powerUps[e]<=0||this.animating))switch(this.playSound("click"),this.powerUps[e]--,this.updateDailyProgress("powerUpsUsed",1),e){case"bomb":this.activateBombMode();break;case"rainbow":this.activateRainbowMode();break;case"lightning":this.activateLightningMode()}},activateBombMode(){this.selectedPowerUp="bomb",this.showCustomToast("点击位置使用炸弹",2e3)},activateRainbowMode(){this.selectedPowerUp="rainbow",this.showCustomToast("点击颜色消除全部",2e3)},activateLightningMode(){this.selectedPowerUp="lightning",this.showCustomToast("点击位置使用闪电",2e3)},async usePowerUpAt(e,t){const s=this.selectedPowerUp;switch(this.selectedPowerUp=null,this.animating=!0,s){case"bomb":await this.explodeBomb(e,t);break;case"rainbow":await this.activateRainbow(e,t);break;case"lightning":await this.strikeLightning(e,t)}"timed"!==this.gameMode&&this.moves--,await this.processMatches()},async explodeBomb(e,t){const s=[],a=[];for(let i=-1;i<=1;i++)for(let o=-1;o<=1;o++){const l=e+i,r=t+o;if(l>=0&&l<this.boardSize&&r>=0&&r<this.boardSize&&this.board[l][r]){const e=this.board[l][r];e.isSpecial&&a.push({row:l,col:r,type:e.specialType}),s.push({row:l,col:r}),this.createMatchParticles(l,r)}}s.forEach((e=>{this.board[e.row][e.col].removing=!0})),this.updateScore(15*s.length,s.length),this.playSound("special"),this.vibrate(150),await this.animateRemoval(),s.forEach((e=>{this.board[e.row][e.col]=null})),await this.dropAndFill(),await this.triggerChainSpecialEffects(a,!0)},async activateRainbow(e,t){const s=this.board[e][t].imageSrc,a=[],i=[];for(let o=0;o<this.boardSize;o++)for(let e=0;e<this.boardSize;e++)if(this.board[o][e]&&this.board[o][e].imageSrc===s){const t=this.board[o][e];t.isSpecial&&i.push({row:o,col:e,type:t.specialType}),a.push({row:o,col:e}),this.createMatchParticles(o,e)}a.forEach((e=>{this.board[e.row][e.col].removing=!0})),this.updateScore(20*a.length,a.length),this.playSound("special"),this.vibrate(200),await this.animateRemoval(),a.forEach((e=>{this.board[e.row][e.col]=null})),await this.dropAndFill(),await this.triggerChainSpecialEffects(i,!0)},async strikeLightning(e,t){const s=[],a=[];for(let i=0;i<this.boardSize;i++)if(this.board[e][i]){const t=this.board[e][i];t.isSpecial&&a.push({row:e,col:i,type:t.specialType}),s.push({row:e,col:i}),this.createMatchParticles(e,i)}for(let i=0;i<this.boardSize;i++)if(this.board[i][t]&&!s.some((e=>e.row===i&&e.col===t))){const e=this.board[i][t];e.isSpecial&&!a.some((e=>e.row===i&&e.col===t))&&a.push({row:i,col:t,type:e.specialType}),s.push({row:i,col:t}),this.createMatchParticles(i,t)}s.forEach((e=>{this.board[e.row][e.col].removing=!0})),this.updateScore(12*s.length,s.length),this.playSound("special"),this.vibrate(120),await this.animateRemoval(),s.forEach((e=>{this.board[e.row][e.col]=null})),await this.dropAndFill(),await this.triggerChainSpecialEffects(a,!0)},async processMatches(){this.animating=!0;let e=0,t=0;for(;;){const s=this.findAllMatchGroups();if(0===s.length)break;t++;for(const t of s){e+=t.cells.length;const s=this.checkForSpecialCreation(t);if(s){const e=this.getGroupCenter(t);t.specialPosition=e,t.specialType=s.type}}t>1?(this.combo=t,this.playSound("combo"),this.vibrate(100),this.createComboParticles()):(this.playSound("match"),this.vibrate()),s.forEach((e=>{e.cells.forEach((e=>{this.board[e.row][e.col].removing=!0,this.createMatchParticles(e.row,e.col)}))})),await this.animateRemoval(),s.forEach((e=>{if(e.cells.forEach((e=>{this.board[e.row][e.col]=null})),e.specialPosition&&e.specialType){const t=e.specialPosition;this.board[t.row][t.col]=this.createSpecialBlock(e.specialType)}}));const a=10*e*Math.max(1,t);this.updateScore(a),this.updateDailyProgress("score",a),this.updateTaskProgress("score",a),this.updateTaskProgress("clear",e),t>=2&&this.updateTaskProgress("combo",1),this.scoreAnimation=!0,setTimeout((()=>{this.scoreAnimation=!1}),500),await this.dropAndFill(),t>1&&await new Promise((e=>setTimeout(e,200)))}if(setTimeout((()=>{this.combo=0}),2e3),"chaos"===this.gameMode&&this.chaosMode.currentChallenge){"combo"===this.chaosMode.currentChallenge.type&&t>=2&&this.chaosMode.challengeProgress++}this.checkLevelObjectives(),this.saveDailyProgress(),this.processChaosMode(),this.updateChaosEffects(),this.animating=!1,"timed"!==this.gameMode&&this.moves<=0?this.endGame():(this.hasPossibleMoves()||this.showCustomToast("没有可用的移动，请使用重排功能",2e3),this.saveGameProgress())},findAllMatchGroups(){const e=[],t=new Set;for(let s=0;s<this.boardSize;s++)for(let a=0;a<this.boardSize;a++){const i=`${s}-${a}`,o=this.board[s][a];if(!t.has(i)&&o&&!o.isSpecial){const i=this.findMatchesAt(s,a);if(i.length>=3){const s={cells:i,type:this.getMatchType(i),length:i.length};i.forEach((e=>{const s=`${e.row}-${e.col}`;t.add(s)})),e.push(s)}}}return e},findMatchesAt(e,t){if(!this.board[e][t])return[];const s=this.board[e][t];if(s.isSpecial)return[];const a=s.imageSrc,i=[{row:e,col:t}];for(let h=t-1;h>=0&&this.board[e][h]&&!this.board[e][h].isSpecial&&this.board[e][h].imageSrc===a;h--)i.unshift({row:e,col:h});for(let h=t+1;h<this.boardSize&&this.board[e][h]&&!this.board[e][h].isSpecial&&this.board[e][h].imageSrc===a;h++)i.push({row:e,col:h});const o=[{row:e,col:t}];for(let h=e-1;h>=0&&this.board[h][t]&&!this.board[h][t].isSpecial&&this.board[h][t].imageSrc===a;h--)o.unshift({row:h,col:t});for(let h=e+1;h<this.boardSize&&this.board[h][t]&&!this.board[h][t].isSpecial&&this.board[h][t].imageSrc===a;h++)o.push({row:h,col:t});const l=[];i.length>=3&&l.push(...i),o.length>=3&&l.push(...o);const r=[],c=new Set;return l.forEach((e=>{const t=`${e.row}-${e.col}`;c.has(t)||(r.push(e),c.add(t))})),r},getMatchType(e){if(e.length<3)return"none";const t=[...new Set(e.map((e=>e.row)))],s=[...new Set(e.map((e=>e.col)))];return 1===t.length?"horizontal":1===s.length?"vertical":e.length>=4&&this.detectLOrTShape(e)||"mixed"},detectLOrTShape(e){const t=e.map((e=>e.row)),s=e.map((e=>e.col)),a={},i={};t.forEach((e=>a[e]=(a[e]||0)+1)),s.forEach((e=>i[e]=(i[e]||0)+1));const o=Math.max(...Object.values(a)),l=Math.max(...Object.values(i));return o>=2&&l>=2?e.length>=5?"T":"L":null},checkForSpecialCreation(e){const t=e.length,s=e.type;return t>=5||"L"===s||"T"===s?{type:"bomb"}:null},getGroupCenter(e){const t=e.cells,s=Math.round(t.reduce(((e,t)=>e+t.row),0)/t.length),a=Math.round(t.reduce(((e,t)=>e+t.col),0)/t.length);return t.find((e=>e.row===s&&e.col===a))||t[0]},createMatchParticles(e,t){if(!this.board[e]||!this.board[e][t])return;const s=this.board[e][t].imageSrc,a=88*t+44,i=88*e+44;for(let o=0;o<5;o++)this.particles.push({id:Date.now()+Math.random()+o,imageSrc:s,x:a+20*(Math.random()-.5),y:i+20*(Math.random()-.5),vx:15*(Math.random()-.5),vy:15*(Math.random()-.5)-5,life:1,decay:.025,gravity:.8})},createComboParticles(){for(let e=0;e<10;e++)this.particles.push({id:Date.now()+Math.random()+e,imageSrc:"/static/themes/special/star.png",x:704*Math.random(),y:704*Math.random(),vx:15*(Math.random()-.5),vy:15*(Math.random()-.5)-3,life:1,decay:.02,gravity:.6})},createChainParticles(e){const t=Math.min(8*e,30),s=["/static/themes/special/lightning.png","/static/themes/special/bomb.png","/static/themes/special/rainbow.png"];for(let a=0;a<t;a++)this.particles.push({id:Date.now()+Math.random()+a,imageSrc:s[Math.floor(Math.random()*s.length)],x:704*Math.random(),y:704*Math.random(),vx:20*(Math.random()-.5),vy:20*(Math.random()-.5)-5,life:1,decay:.018,gravity:.7})},updateParticles(){this.particles=this.particles.filter((e=>{e.x+=e.vx,e.y+=e.vy,e.gravity&&(e.vy+=e.gravity),e.life-=e.decay;const t=e.x<-100||e.x>800||e.y<-100||e.y>1200,s=e.life<=0;return!t&&!s})),this.particles.length>100&&(this.particles=this.particles.slice(-50))},startParticleLoop(){this.particleTimer&&clearInterval(this.particleTimer),this.particleTimer=setInterval((()=>{this.gameOver?this.clearParticleLoop():this.updateParticles()}),16)},clearParticleLoop(){this.particleTimer&&(clearInterval(this.particleTimer),this.particleTimer=null),this.particles=[]},animateRemoval:async()=>new Promise((e=>{setTimeout((()=>{e()}),500)})),async dropAndFill(){for(let e=0;e<this.boardSize;e++){let t=this.boardSize-1;for(let s=this.boardSize-1;s>=0;s--)this.board[s][e]&&(s!==t&&(this.board[t][e]=this.board[s][e],this.board[t][e].falling=!0,this.board[s][e]=null),t--);for(let s=t;s>=0;s--){const t=this.createRandomCell();t.falling=!0,this.board[s][e]=t}}await new Promise((e=>{setTimeout((()=>{for(let e=0;e<this.boardSize;e++)for(let t=0;t<this.boardSize;t++)this.board[e][t]&&(this.board[e][t].falling=!1);e()}),400)}))},hasPossibleMoves(){for(let e=0;e<this.boardSize;e++)for(let t=0;t<this.boardSize;t++){if(t<this.boardSize-1&&this.wouldCreateMatch(e,t,e,t+1))return!0;if(e<this.boardSize-1&&this.wouldCreateMatch(e,t,e+1,t))return!0}return!1},wouldCreateMatch(e,t,s,a){const i=this.board[e][t];this.board[e][t]=this.board[s][a],this.board[s][a]=i;const o=this.hasMatchAt(e,t)||this.hasMatchAt(s,a);return this.board[s][a]=this.board[e][t],this.board[e][t]=i,o},startHintTimer(){this.clearHintTimer(),this.hintTimer=setTimeout((()=>{this.showHint()}),1e4)},clearHintTimer(){this.hintTimer&&(clearTimeout(this.hintTimer),this.hintTimer=null),this.hintCells=[]},showHint(){const e=[];for(let t=0;t<this.boardSize;t++)for(let s=0;s<this.boardSize;s++)s<this.boardSize-1&&this.wouldCreateMatch(t,s,t,s+1)&&e.push([{row:t,col:s},{row:t,col:s+1}]),t<this.boardSize-1&&this.wouldCreateMatch(t,s,t+1,s)&&e.push([{row:t,col:s},{row:t+1,col:s}]);if(e.length>0){const t=e[Math.floor(Math.random()*e.length)];this.hintCells=t,setTimeout((()=>{this.hintCells=[]}),3e3)}},showHintManually(){this.animating||this.gameOver||(this.playSound("click"),this.clearHintTimer(),this.showHint(),this.playSound("swap"),this.vibrate(50))},confirmShuffle(){this.animating||this.gameOver||(this.playSound("click"),l({title:"确认重排",content:"重新排列棋盘将消耗1步数，是否继续？",confirmText:"确认",cancelText:"取消",success:e=>{e.confirm&&this.shuffleBoard()}}))},shuffleBoard(){if("timed"!==this.gameMode&&this.moves<=0)return void this.showCustomToast("步数不足",1500);this.animating=!0,this.selectedCell=null,this.hintCells=[],this.clearHintTimer();const e=[];for(let s=0;s<this.boardSize;s++)for(let t=0;t<this.boardSize;t++){const a=this.board[s][t];a&&!a.isSpecial&&e.push(a.imageSrc)}for(let s=e.length-1;s>0;s--){const t=Math.floor(Math.random()*(s+1));[e[s],e[t]]=[e[t],e[s]]}let t=0;for(let s=0;s<this.boardSize;s++)for(let a=0;a<this.boardSize;a++){const i=this.board[s][a];i&&!i.isSpecial&&t<e.length&&(i.imageSrc=e[t],t++)}this.removeInitialMatches(),"timed"!==this.gameMode&&this.moves--,this.playSound("swap"),this.vibrate(100),this.showCustomToast("重排完成",1e3),setTimeout((()=>{this.animating=!1,this.startHintTimer()}),500)},openGameSettings(){this.playSound("click"),this.showGameSettings=!0},continueGame(){this.playSound("click"),this.showGameSettings=!1},confirmRestart(){this.playSound("click"),l({title:"确认重新开始",content:"重新开始将清除当前进度，是否继续？",confirmText:"确认",cancelText:"取消",success:e=>{e.confirm&&(this.showGameSettings=!1,this.closeContinueDialog(),this.resetGame())}})},confirmBackToHome(){this.playSound("click"),l({title:"确认返回",content:"返回主界面将保存当前游戏进度，下次可以继续游戏",confirmText:"确认",cancelText:"取消",success:e=>{e.confirm&&this.backToHome()}})},backToHome(){this.saveGameProgress(),this.clearTimers(),r()},startGameTimer(){this.gameTimeInterval&&clearInterval(this.gameTimeInterval),this.gameTimeInterval=setInterval((()=>{this.gameTime++}),1e3)},startTimer(){this.timerInterval=setInterval((()=>{this.timeLeft--,this.timeLeft<=0&&this.endGame()}),1e3)},clearTimers(){this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null),this.gameTimeInterval&&(clearInterval(this.gameTimeInterval),this.gameTimeInterval=null),this.clearHintTimer()},vibrate(e=50){"undefined"!=typeof uni&&c&&c({type:e>100?"heavy":"light"})},playSound(t){e.playSound(t)},updateDailyProgress(e,t){void 0!==this.dailyProgress[e]&&(this.dailyProgress[e]+=t)},saveDailyProgress(){t("dailyProgress",this.dailyProgress)},checkLevelObjectives(){switch(this.gameMode){case"classic":this.score>=1e3*this.level&&this.levelUp(),this.moves<=0&&this.endGame();break;case"chaos":this.moves<=0&&this.endGame();break;case"timed":this.timeLeft<=0&&this.endGame()}},levelComplete(){this.playSound("levelcomplete"),this.specialEffects.showLevelUp=!0,setTimeout((()=>{this.specialEffects.showLevelUp=!1,this.nextLevel()}),2e3)},levelUp(){this.level++,this.playSound("levelcomplete"),this.vibrate(150),this.moves+=10,this.maxMoves=Math.max(25,50-2*this.level),this.specialEffects.showLevelUp=!0,setTimeout((()=>{this.specialEffects.showLevelUp=!1}),2e3),this.showCustomToast("进入下一关，+10步",2e3)},nextLevel(){switch(this.gameOver=!1,this.selectedCell=null,this.hintCells=[],this.animating=!1,this.selectedPowerUp=null,this.gameMode){case"classic":case"chaos":case"timed":this.moves=this.maxMoves}Object.keys(this.specialEffects).forEach((e=>{this.specialEffects[e]=!1})),this.clearTimers(),"timed"===this.gameMode&&this.startTimer(),this.startHintTimer(),this.playSound("levelcomplete")},endGame(){this.playSound("gameover"),this.gameOver=!0,this.clearTimers(),this.clearGameProgress();let e="";switch(this.gameMode){case"classic":e=`经典模式结束！\n达到第${this.level}关\n最终得分：${this.score}`;break;case"chaos":let t=`🌪️ 混沌模式结束！\n最终得分：${this.score}`;if(this.chaosMode.currentChallenge){const e=this.chaosMode.currentChallenge,s=this.chaosMode.challengeProgress,a=this.chaosMode.challengeTarget;t+=`\n\n当前挑战：${e.name}\n进度：${s}/${a}`,t+=s>=a?"\n🎉 挑战已完成！":"\n⏸️ 挑战未完成"}e=t;break;case"target":e=this.score>=this.targetScore?`目标达成！\n目标：${this.targetScore}\n实际得分：${this.score}`:`挑战失败！\n目标：${this.targetScore}\n实际得分：${this.score}\n差距：${this.targetScore-this.score}`;break;case"timed":e=`限时挑战结束！\n挑战时间：90秒\n最终得分：${this.score}`}setTimeout((()=>{this.showCustomToast(e,3e3)}),500)},giveReward(e){Object.keys(e).forEach((t=>{void 0!==this.powerUps[t]&&(this.powerUps[t]+=e[t])})),this.showCustomToast("获得道具奖励!",2e3)},async uploadGameData(){try{const e=s("userInfo");if(!e||!e.username||!e.encryptedData)return;const t={username:e.username,encryptedData:e.encryptedData,gameMode:this.gameMode,score:this.score,level:this.level,challengeCount:"chaos"===this.gameMode?this.chaosMode.completedChallenges:0,gameTime:this.gameTime,timestamp:Date.now()},a=this.$apiConfig;if(!a)return void console.warn("API配置未找到，无法上传游戏数据");const i=a.BASE_URL+a.ENDPOINTS.UPLOAD_GAME_DATA;h({url:i,method:"POST",header:{"Content-Type":"application/json"},data:t,success:e=>{var t;200===e.statusCode&&e.data.success?(console.log("游戏数据上传成功:",e.data),e.data.data&&e.data.data.updateType&&"无更新"!==e.data.data.updateType&&"地区更新"!==e.data.data.updateType&&console.log(`🎉 ${e.data.data.updateType}！来自 ${e.data.data.location}`)):console.warn("游戏数据上传失败:",(null==(t=e.data)?void 0:t.message)||"未知错误")},fail:e=>{console.warn("游戏数据上传网络失败:",e)}})}catch(e){console.warn("上传游戏数据时发生错误:",e)}},loadSettings(){const e=(new Date).toDateString(),t=s("dailyProgress")||{};t.date!==e?this.dailyProgress={date:e,score:0,matches:0,powerUpsUsed:0}:this.dailyProgress=t}}},[["render",function(e,t,s,a,i,o){const l=T,r=C,c=P,h=_,x=m;return g(),n(x,{"scroll-y":"true",class:"scroll-container"},{default:d((()=>[u(r,{class:"game-container"},{default:d((()=>{var e;return[u(r,{class:"game-info"},{default:d((()=>[u(r,{class:"info-row"},{default:d((()=>[u(r,{class:"score-container"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("得分")])),_:1}),u(l,{class:f(["score-value",{"score-animate":i.scoreAnimation}])},{default:d((()=>[p(b(i.score),1)])),_:1},8,["class"])])),_:1}),"timed"!==i.gameMode?(g(),n(r,{key:0,class:"level-container"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p(b("chaos"===i.gameMode?"挑战":"关卡"),1)])),_:1}),u(l,{class:"level-value"},{default:d((()=>[p(b("chaos"===i.gameMode?o.getChaosChallenge():i.level),1)])),_:1})])),_:1})):w("",!0),u(r,{class:"moves-container"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("步数")])),_:1}),u(l,{class:f(["moves-value",{"moves-warning":i.moves<=5&&"timed"!==i.gameMode}])},{default:d((()=>[p(b("timed"===i.gameMode?"∞":i.moves),1)])),_:1},8,["class"])])),_:1})])),_:1}),"chaos"===i.gameMode?(g(),n(r,{key:0,class:"chaos-container"},{default:d((()=>[i.chaosMode.currentChallenge?(g(),n(r,{key:0,class:"current-challenge"},{default:d((()=>[u(l,{class:"challenge-name"},{default:d((()=>[p(b(i.chaosMode.currentChallenge.name)+b("  ")+b(i.chaosMode.challengeProgress)+"/"+b(i.chaosMode.challengeTarget),1)])),_:1}),u(r,{class:"challenge-progress"},{default:d((()=>[u(r,{class:"chaos-progress-bar"},{default:d((()=>[u(r,{class:"chaos-progress-fill",style:y({width:Math.min(100,i.chaosMode.challengeProgress/i.chaosMode.challengeTarget*100)+"%"})},null,8,["style"])])),_:1})])),_:1})])),_:1})):(g(),n(r,{key:1,class:"next-challenge"},{default:d((()=>[u(l,{class:"next-challenge-text"},{default:d((()=>[p("🌪️ 下个挑战："+b(i.chaosMode.nextChallengeIn)+"步后",1)])),_:1})])),_:1})),i.chaosMode.multiplier>1?(g(),n(r,{key:2,class:"multiplier-display"},{default:d((()=>[u(l,{class:"multiplier-text"},{default:d((()=>[p("🔥 分数 x"+b(i.chaosMode.multiplier),1)])),_:1})])),_:1})):w("",!0)])),_:1})):w("",!0),"timed"===i.gameMode?(g(),n(r,{key:1,class:"time-container"},{default:d((()=>[u(l,{class:"time-label"},{default:d((()=>[p("⏰")])),_:1}),u(l,{class:f(["time-value",{"time-warning":i.timeLeft<=10}])},{default:d((()=>[p(b(i.timeLeft)+"s",1)])),_:1},8,["class"])])),_:1})):w("",!0),i.combo>1?(g(),n(r,{key:2,class:"combo-container"},{default:d((()=>[u(l,{class:"combo-text"},{default:d((()=>[p("🔥 "+b(i.combo)+"连击!",1)])),_:1})])),_:1})):w("",!0)])),_:1}),u(r,{class:"powerup-bar"},{default:d((()=>[(g(!0),S(v,null,k(i.powerUps,((e,t)=>(g(),n(r,{class:"powerup-item",key:t,onClick:e=>o.usePowerUp(t)},{default:d((()=>[u(l,{class:"powerup-icon"},{default:d((()=>[p(b(o.getPowerUpIcon(t)),1)])),_:2},1024),u(l,{class:"powerup-count"},{default:d((()=>[p(b(e),1)])),_:2},1024)])),_:2},1032,["onClick"])))),128))])),_:1}),u(r,{class:"game-board"},{default:d((()=>[(g(!0),S(v,null,k(i.board,((e,t)=>(g(),n(r,{key:t,class:"board-row"},{default:d((()=>[(g(!0),S(v,null,k(e,((e,s)=>(g(),n(r,{key:s,class:f(["board-cell",{selected:i.selectedCell&&i.selectedCell.row===t&&i.selectedCell.col===s,hint:i.hintCells.some((e=>e.row===t&&e.col===s)),removing:e.removing,falling:e.falling,"special-block":e.isSpecial,"special-bomb":e.isSpecial&&"bomb"===e.specialType,"special-horizontal":e.isSpecial&&"horizontal"===e.specialType,"special-vertical":e.isSpecial&&"vertical"===e.specialType}]),onClick:e=>o.selectCell(t,s),style:y({transform:e.transform||"none",opacity:e.removing?0:1})},{default:d((()=>[u(c,{class:f(["cell-image",{"special-image":e.isSpecial}]),src:e.imageSrc,mode:"aspectFit"},null,8,["class","src"]),e.isSpecial?(g(),n(r,{key:0,class:"special-glow"})):w("",!0)])),_:2},1032,["class","onClick","style"])))),128))])),_:2},1024)))),128)),u(r,{class:"particles-layer"},{default:d((()=>[(g(!0),S(v,null,k(i.particles,(e=>(g(),n(r,{key:e.id,class:"particle",style:y({left:e.x+"rpx",top:e.y+"rpx",opacity:e.life})},{default:d((()=>[u(c,{class:"particle-image",src:e.imageSrc,mode:"aspectFit"},null,8,["src"])])),_:2},1032,["style"])))),128))])),_:1})])),_:1}),u(r,{class:"game-controls"},{default:d((()=>[u(h,{class:"control-btn hint-btn",onClick:o.showHintManually},{default:d((()=>[u(l,{class:"control-text"},{default:d((()=>[p("💡 提示")])),_:1})])),_:1},8,["onClick"]),u(h,{class:"control-btn shuffle-btn",onClick:o.confirmShuffle},{default:d((()=>[u(l,{class:"control-text"},{default:d((()=>[p("🔄️ 重排")])),_:1})])),_:1},8,["onClick"]),u(h,{class:"control-btn settings-btn",onClick:o.openGameSettings},{default:d((()=>[u(l,{class:"control-text"},{default:d((()=>[p("⚙️ 设置")])),_:1})])),_:1},8,["onClick"])])),_:1}),i.specialEffects.showLevelUp?(g(),n(r,{key:0,class:"special-effect level-up"},{default:d((()=>[u(l,{class:"effect-text"},{default:d((()=>[p("🎉升级了!🎉")])),_:1}),u(l,{class:"effect-subtext"},{default:d((()=>[p("关卡 "+b(i.level),1)])),_:1})])),_:1})):w("",!0),i.specialEffects.showPerfect?(g(),n(r,{key:1,class:"special-effect perfect"},{default:d((()=>[u(l,{class:"effect-text"},{default:d((()=>[p("✨ 完美! ✨")])),_:1})])),_:1})):w("",!0),i.specialEffects.showComboMax?(g(),n(r,{key:2,class:"special-effect combo-max"},{default:d((()=>[u(l,{class:"effect-text"},{default:d((()=>[p("🔥 超级连击! 🔥")])),_:1})])),_:1})):w("",!0),i.specialEffects.showChainReaction?(g(),n(r,{key:3,class:"special-effect chain-reaction"},{default:d((()=>[u(l,{class:"effect-text"},{default:d((()=>[p("⚡ 连锁反应! ⚡")])),_:1}),u(l,{class:"effect-subtext"},{default:d((()=>[p("x"+b(i.specialEffects.chainCount),1)])),_:1})])),_:1})):w("",!0),i.customToast.show?(g(),n(r,{key:4,class:f(["custom-toast",{show:i.customToast.visible,hide:i.customToast.hiding}])},{default:d((()=>[u(l,{class:"toast-text"},{default:d((()=>[p(b(i.customToast.message),1)])),_:1})])),_:1},8,["class"])):w("",!0),i.taskSystem.isExpanded?(g(),n(r,{key:5,class:"task-overlay",onClick:o.closeTaskWindow},null,8,["onClick"])):w("",!0),u(r,{class:f(["task-float-window",{"task-expanded":i.taskSystem.isExpanded}]),style:y({top:((null==(e=i.taskSystem.position)?void 0:e.y)||150)+"px"})},{default:d((()=>[i.taskSystem.isExpanded?w("",!0):(g(),n(r,{key:0,class:"task-collapsed-semicircle",onClick:o.toggleTaskWindow,onTouchstart:o.onTouchStart,onTouchmove:o.onTouchMove,onTouchend:o.onTouchEnd},{default:d((()=>[u(r,{class:"semicircle-bg"}),i.taskSystem.currentTask&&!i.taskSystem.isExpanded?(g(),n(r,{key:0,class:"task-progress-arc"},{default:d((()=>[u(r,{class:"progress-track"}),u(r,{class:"progress-fill",style:y({height:o.getArcProgress()+"%"})},null,8,["style"])])),_:1})):w("",!0),u(r,{class:"task-icon"},{default:d((()=>[p("📋")])),_:1})])),_:1},8,["onClick","onTouchstart","onTouchmove","onTouchend"])),i.taskSystem.isExpanded?(g(),n(r,{key:1,class:"task-expanded-content"},{default:d((()=>[u(r,{class:"task-header"},{default:d((()=>[u(l,{class:"task-title"},{default:d((()=>[p("📋 本局任务")])),_:1}),u(r,{class:"task-close",onClick:o.toggleTaskWindow},{default:d((()=>[p("✕")])),_:1},8,["onClick"])])),_:1}),i.taskSystem.currentTask?(g(),n(r,{key:0,class:"task-content"},{default:d((()=>[u(r,{class:"task-info"},{default:d((()=>[u(l,{class:"task-name"},{default:d((()=>[p(b(i.taskSystem.currentTask.name),1)])),_:1}),u(l,{class:"task-desc"},{default:d((()=>[p(b(i.taskSystem.currentTask.description),1)])),_:1})])),_:1}),u(r,{class:"task-progress"},{default:d((()=>[u(r,{class:"progress-bar-detailed"},{default:d((()=>[u(r,{class:"progress-fill-detailed",style:y({width:i.taskSystem.taskProgress/i.taskSystem.taskTarget*100+"%"})},null,8,["style"])])),_:1}),u(l,{class:"progress-text-detailed"},{default:d((()=>[p(b(i.taskSystem.taskProgress)+"/"+b(i.taskSystem.taskTarget),1)])),_:1})])),_:1}),u(r,{class:"task-reward"},{default:d((()=>[u(l,{class:"reward-label"},{default:d((()=>[p("完成奖励：")])),_:1}),u(l,{class:"reward-text"},{default:d((()=>[p(b(i.taskSystem.currentTask.reward),1)])),_:1})])),_:1})])),_:1})):(g(),n(r,{key:1,class:"task-loading"},{default:d((()=>[u(l,{class:"loading-text"},{default:d((()=>[p("正在生成新任务...")])),_:1})])),_:1}))])),_:1})):w("",!0)])),_:1},8,["class","style"]),i.taskSystem.showRewardAnimation?(g(),n(r,{key:6,class:"task-reward-animation"},{default:d((()=>[u(r,{class:"reward-content"},{default:d((()=>[u(l,{class:"reward-title"},{default:d((()=>[p("🎉 任务完成！")])),_:1}),u(l,{class:"reward-item"},{default:d((()=>{var e;return[p("获得道具："+b(null==(e=i.taskSystem.currentTask)?void 0:e.rewardItem),1)]})),_:1})])),_:1})])),_:1})):w("",!0),i.showContinueDialog?(g(),n(r,{key:7,class:"settings-overlay"},{default:d((()=>[u(r,{class:"settings-modal continue-dialog-modal",onClick:t[0]||(t[0]=M((()=>{}),["stop"]))},{default:d((()=>[u(r,{class:"settings-header"},{default:d((()=>[u(r,{class:"settings-icon"},{default:d((()=>[p("🎮")])),_:1}),u(l,{class:"settings-title"},{default:d((()=>[p("发现游戏进度")])),_:1})])),_:1}),u(r,{class:"settings-content"},{default:d((()=>[i.continueDialogData?(g(),n(r,{key:0,class:"game-info-card"},{default:d((()=>[u(r,{class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("游戏模式")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(i.continueDialogData.modeName),1)])),_:1})])),_:1}),u(r,{class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("当前得分")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(i.continueDialogData.score),1)])),_:1})])),_:1}),"classic"===i.continueDialogData.gameMode?(g(),n(r,{key:0,class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("当前关卡")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(i.continueDialogData.level),1)])),_:1})])),_:1})):w("",!0),"chaos"===i.continueDialogData.gameMode?(g(),n(r,{key:1,class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("当前挑战")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(i.continueDialogData.multiplier),1)])),_:1})])),_:1})):w("",!0),i.continueDialogData.gameTime>0?(g(),n(r,{key:2,class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("游戏时长")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(o.formatTime(i.continueDialogData.gameTime)),1)])),_:1})])),_:1})):w("",!0)])),_:1})):w("",!0),u(r,{class:"settings-actions"},{default:d((()=>[u(h,{class:"action-btn primary-btn",onClick:o.continueSavedGame},{default:d((()=>[u(r,{class:"btn-icon"},{default:d((()=>[p("▶️")])),_:1}),u(l,{class:"btn-text"},{default:d((()=>[p("继续游戏")])),_:1})])),_:1},8,["onClick"]),u(h,{class:"action-btn secondary-btn",onClick:o.confirmRestart},{default:d((()=>[u(r,{class:"btn-icon"},{default:d((()=>[p("🔄")])),_:1}),u(l,{class:"btn-text"},{default:d((()=>[p("重新开始")])),_:1})])),_:1},8,["onClick"]),u(h,{class:"action-btn tertiary-btn",onClick:o.confirmBackToHome},{default:d((()=>[u(r,{class:"btn-icon"},{default:d((()=>[p("🏠")])),_:1}),u(l,{class:"btn-text"},{default:d((()=>[p("返回主界面")])),_:1})])),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1})])),_:1})):w("",!0),i.showGameSettings?(g(),n(r,{key:8,class:"settings-overlay",onClick:o.continueGame},{default:d((()=>[u(r,{class:"settings-modal",onClick:t[1]||(t[1]=M((()=>{}),["stop"]))},{default:d((()=>[u(r,{class:"settings-header"},{default:d((()=>[u(r,{class:"settings-icon"},{default:d((()=>[p("⚙️")])),_:1}),u(l,{class:"settings-title"},{default:d((()=>[p("游戏设置")])),_:1}),u(r,{class:"settings-close",onClick:o.continueGame},{default:d((()=>[p("✕")])),_:1},8,["onClick"])])),_:1}),u(r,{class:"settings-content"},{default:d((()=>[u(r,{class:"game-info-card"},{default:d((()=>[u(r,{class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("当前得分")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(i.score),1)])),_:1})])),_:1}),u(r,{class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("游戏时长")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(o.formatTime(i.gameTime)),1)])),_:1})])),_:1}),"classic"===i.gameMode?(g(),n(r,{key:0,class:"info-item"},{default:d((()=>[u(l,{class:"info-label"},{default:d((()=>[p("当前关卡")])),_:1}),u(l,{class:"info-value"},{default:d((()=>[p(b(i.level),1)])),_:1})])),_:1})):w("",!0)])),_:1}),u(r,{class:"settings-actions"},{default:d((()=>[u(h,{class:"action-btn primary-btn",onClick:o.continueGame},{default:d((()=>[u(r,{class:"btn-icon"},{default:d((()=>[p("▶️")])),_:1}),u(l,{class:"btn-text"},{default:d((()=>[p("继续游戏")])),_:1})])),_:1},8,["onClick"]),u(h,{class:"action-btn secondary-btn",onClick:o.confirmRestart},{default:d((()=>[u(r,{class:"btn-icon"},{default:d((()=>[p("🔄")])),_:1}),u(l,{class:"btn-text"},{default:d((()=>[p("重新开始")])),_:1})])),_:1},8,["onClick"]),u(h,{class:"action-btn tertiary-btn",onClick:o.confirmBackToHome},{default:d((()=>[u(r,{class:"btn-icon"},{default:d((()=>[p("🏠")])),_:1}),u(l,{class:"btn-text"},{default:d((()=>[p("返回主界面")])),_:1})])),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1})])),_:1},8,["onClick"])):w("",!0),i.gameOver?(g(),n(r,{key:9,class:"game-over"},{default:d((()=>[u(r,{class:"game-over-content"},{default:d((()=>["classic"===i.gameMode?(g(),S(v,{key:0},[u(l,{class:"game-over-title"},{default:d((()=>[p("🎯 经典模式结束")])),_:1}),u(l,{class:"game-over-score"},{default:d((()=>[p("最终得分: "+b(i.score),1)])),_:1}),u(l,{class:"game-over-level"},{default:d((()=>[p("到达关卡: "+b(i.level),1)])),_:1}),u(l,{class:"game-over-desc"},{default:d((()=>[p("挑战更高分数，突破自我极限！")])),_:1})],64)):"chaos"===i.gameMode?(g(),S(v,{key:1},[u(l,{class:"game-over-title"},{default:d((()=>[p("🌪️ 混沌模式结束")])),_:1}),u(l,{class:"game-over-score"},{default:d((()=>[p("最终得分: "+b(i.score),1)])),_:1}),u(l,{class:"game-over-level"},{default:d((()=>[p("完成挑战: "+b(i.chaosMode.completedChallenges),1)])),_:1}),i.chaosMode.currentChallenge?(g(),n(l,{key:0,class:"game-over-desc"},{default:d((()=>[p(" 当前挑战: "+b(i.chaosMode.currentChallenge.name)+" ("+b(i.chaosMode.challengeProgress)+"/"+b(i.chaosMode.challengeTarget)+") ",1)])),_:1})):(g(),n(l,{key:1,class:"game-over-desc"},{default:d((()=>[p(" 在混沌中寻找秩序，挑战无限可能！ ")])),_:1}))],64)):"timed"===i.gameMode?(g(),S(v,{key:2},[u(l,{class:"game-over-title"},{default:d((()=>[p("⚡ 限时模式结束")])),_:1}),u(l,{class:"game-over-score"},{default:d((()=>[p("最终得分: "+b(i.score),1)])),_:1}),u(l,{class:"game-over-level"},{default:d((()=>[p("时间奖励: "+b(i.timeBonusCount)+"次",1)])),_:1}),u(l,{class:"game-over-desc"},{default:d((()=>[p("时间就是一切，速度决定成败！")])),_:1})],64)):w("",!0),u(r,{class:"game-over-buttons"},{default:d((()=>[u(h,{class:"restart-btn",onClick:o.resetGame},{default:d((()=>[u(l,{class:"restart-text"},{default:d((()=>[p("🎮 重新开始")])),_:1})])),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1})):w("",!0)]})),_:1})])),_:1})}],["__scopeId","data-v-895e2ef1"]]);export{E as default};
